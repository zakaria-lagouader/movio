---
import Layout from "../../layouts/Layout.astro";
import { toHoursAndMinuts, url } from "../../lib/utils";

export async function getStaticPaths() {
	const data = await fetch("http://localhost:5000/movies/");
	const movies = await data.json();

	return movies.map(({ movie, recommendations }: any) => ({
		params: { id: movie.id },
		props: { movie, recommendations },
	}));
}

const { movie, recommendations } = Astro.props;
---

<Layout title={`Movio | ${movie.title}`}>
	<div class="bg-gray-900">
		<div class="relative z-[1]">
			<img
				class="absolute top-0 left-0 w-full h-full object-cover z-[-1]"
				src={movie.backdrop_path !== null
					? `https://image.tmdb.org/t/p/original/${movie.backdrop_path}`
					: ""}
				alt={`${movie.title} backdrop image`}
			/>
			<div class="bg-gray-900 bg-opacity-80 backdrop-blur w-full py-10">
				<div
					class="grid grid-cols-3 sm:grid-cols-4 gap-4 items-start px-4 mx-auto max-w-screen-xl"
				>
					<a href="#">
						<img
							class="block w-full aspect-[2/3] object-cover"
							src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}
							alt={`${movie.title} poster image`}
						/>
					</a>
					<div class="col-span-3 text-white">
						<div>
							<h1 class="font-bold text-3xl md:text-4xl">
								{movie.title}
								<span class="font-normal"
									>({movie.release_date.split("-")[0]})</span
								>
							</h1>
							<p class="text-sm text-gray-100 mt-2">
								{movie.release_date} &#x2022;
								{movie.genres.join(", ")}
								&#x2022; {toHoursAndMinuts(movie.runtime)}
							</p>
							<div class="flex items-center mt-4">
								<svg
									aria-hidden="true"
									class="w-12 h-12 text-yellow-400"
									fill="currentColor"
									viewBox="0 0 20 20"
									xmlns="http://www.w3.org/2000/svg"
									><path
										d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"
									></path></svg
								>
								<p class="text-white text-lg font-medium">
									{movie.vote_average}
								</p>
							</div>
							<p class="text-lg font-medium text-gray-200 italic my-4">
								{movie.tagline ?? ""}
							</p>
							<p class="text-xl font-semibold mt-4">Overview</p>
							<p class="text-sm sm:text-md text-gray-200 mt-1">
								{movie.overview}
							</p>
							<p class="text-xl font-semibold mt-10 mb-2">Crew</p>
							<ul class="grid grid-cols-2 lg:grid-cols-4 gap-4">
								{
									movie.crew.map((crew: any) => (
										<li>
											<p class="font-semibold">{crew.name}</p>
											<p class="text-sm">{crew.job}</p>
										</li>
									))
								}
							</ul>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="px-4 mx-auto max-w-screen-xl min-h-screen">
			<p class="font-semibold mt-8 text-3xl text-white">Recommended :</p>
			<div
				class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 py-8 lg:py-16"
			>
				{
					recommendations.map((r: any) => (
						<a
							href={url(`/movies/${r.id}`)}
							class="relative block w-full aspect-[2/3] z-[1]"
						>
							<img
								class="absolute top-0 left-0 w-full h-full object-cover z-[-1]"
								src={`https://image.tmdb.org/t/p/original/${r.poster_path}`}
								alt={`${r.title} backdrop image`}
							/>

							<div class="w-full h-full bg-black bg-opacity-70 p-6">
								<span class="font-medium text-white bg-blue-600 text-sm px-2 py-1 rounded-sm">
									{r.genres[0]}
								</span>
								<p class="font-semibold text-white text-3xl mt-4">
									{r.title}
								</p>
							</div>
						</a>
					))
				}
			</div>
		</div>
	</div>
</Layout>
